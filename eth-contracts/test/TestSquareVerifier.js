// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
// const contract = artifacts.require("SquareVerifier");

// Test verification with correct proof

// - use the contents from proof.json generated from zokrates steps

// Test verification with incorrect proof

const Web3 = require('web3');
const abiFile = require('../build/contracts/SquareVerifier.json');

contract('Zokrates Verifier Tests', async (accounts) => {

    let config;
    before('setup contract', async () => {
        const owner = accounts[0];
        const testAccounts = accounts.slice(1);

        const address = '0x1866ac53581897EccB39CB0df3c6386214c4531f'; // verifier contract address           
        const abi = abiFile.abi;
        const web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:7545"));
        const squareVerifier = new web3.eth.Contract(abi, address, { from: owner });

        config = {
            web3,
            owner,
            testAccounts,
            squareVerifier
        }
    });

    it('initializes correctly', () => {
        console.log('Here is the configuration object');
        console.log(config);
        assert(true, true, "Everything is working fine");
    });

})